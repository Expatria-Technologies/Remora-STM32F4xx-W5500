
[platformio]
include_dir = Inc
src_dir = Src

[common]
build_flags =
  -I .
  -I Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc
  -I Middlewares/ST/STM32_USB_Device_Library/Core/Inc
  -I USB_DEVICE/Target
  -I USB_DEVICE/App
  -I lwip/src/include
  -I libraries/ioLibrary_Driver
  -I libraries/ioLibrary_Driver/Ethernet
  -I port/ioLibrary_Driver/inc
  -I port/lwip
  -I port
  -I Src
  -D BOARD_FLEXI_HAL=1
  -D HAS_BOOTLOADER=1
  #-D USB_DEBUG=1 #note that when enabled you *must* connect to CDC for Remora to run
  -D _USE_IOCTL=1
  -D _USE_WRITE=1
  -D _VOLUMES=1
  -D HSE_VALUE=25000000
  -D _WIZCHIP_=5500 
  -D SPI_ENABLE=1
  -D SPI_PORT=1
  -D USB_SERIAL_CDC=1
  '-D BOARD_NAME="remora"'
  -Wl,-u,_printf_float
  -I lwip/src/include
  #-I networking/wiznet  
lib_deps = 
  #ioLibrary_Driver
  libraries
  lwip
  #port
  # USB serial support
  Core
  Class
  App
  Target
lib_extra_dirs =
  .
  Middlewares/ST/STM32_USB_Device_Library
  USB_DEVICE

[env]
platform = ststm32
platform_packages = framework-stm32cubef4 @ ~1.26.2
framework = stm32cube
# Do not produce .a files for lib deps (which would prevent them from overriding weak symbols)
lib_archive = no
lib_ldf_mode = off
board_build.mcu = stm32f446ret6
board_build.ldscript = FLEXI_STM32F446RETX_BL_FLASH.ld
grblhal_driver_version = remora-eth.3.0
extra_scripts = 
    post:extra_script.py


[env:f446re_flexi_cnc_printnc]
board = genericSTM32F446RE
custom_prog_version = PRINTNC
; change microcontroller
#board_build.mcu = stm32f446ret6
#board_build.ldscript = FLEXI_STM32F446RETX_BL_FLASH.ld
build_flags = ${common.build_flags}
  # See Inc/my_machine.h for options 
lib_deps = ${common.lib_deps}
lib_extra_dirs = ${common.lib_extra_dirs}


# Alternatively, place the .pio/build/<env name>/firmware.bin on the NODE_F4xxRE drive
upload_protocol = stlink
debug_tool = stlink